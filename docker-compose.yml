services:
  postgres_users:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./pgdata_users:/var/lib/postgesql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: users_postgres_db

  postgres_posts:
    image: postgres:17-alpine
    ports:
      - "6543:5432"
    restart: always
    volumes:
      - ./pgdata_posts:/var/lib/postgesql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: posts_postgres_db

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8091:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-init-topics:
    container_name: kafka-init-topics
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ "/bin/bash", "-c" ]
    command: "echo 'Waiting for Kafka to be ready...';
      sleep 1;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic users-registration --partitions 1 --replication-factor 1;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic posts-views --partitions 1 --replication-factor 1;"

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8090:8080"
    restart: always
    volumes:
      - ./configs/openapi.yaml:/configs/openapi.yaml
    environment:
      - SWAGGER_JSON=/configs/openapi.yaml
    container_name: swagger_ui

  gateway:
    build:
      context: .
      dockerfile: internal/services/gateway/Dockerfile
    ports:
      - "8081:8081"
    container_name: gateway

  user_service:
    build:
      context: .
      dockerfile: internal/services/user/Dockerfile
    ports:
      - "8082:8082"
    container_name: user_service

  posts_service:
    build:
      context: .
      dockerfile: internal/services/posts/Dockerfile
    ports:
      - "8083:8083"
    container_name: posts_service